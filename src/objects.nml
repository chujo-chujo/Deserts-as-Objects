
// // OGFX GRID sand
spriteset (spriteset_ogfx_grid_sand,  "gfx/ogfx_grid_ground.png") { template_groundtiles(0) }
spriteset (spriteset_ogfx_grid_coast, "gfx/ogfx_grid_ground.png") { template_groundtiles(1) }

spritelayout layout_ogfx_grid_sand { ground { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_sand_coast { 
    ground { sprite: 4061; }
    building { sprite: spriteset_ogfx_grid_coast(LOAD_TEMP(0)); always_draw: 1; } }
spritelayout layout_ogfx_grid_sand_menu { 
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    building { sprite: spriteset_text(EDIT_TEXT_A); }
    building { sprite: spriteset_text(EDIT_TEXT_B); } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_sand_coast, [view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_sand;
    4: layout_ogfx_grid_sand_coast;  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_sand, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_sand);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              1;
        }
        graphics {
            default:         switch_ogfx_grid_sand_coast;
            purchase:        layout_ogfx_grid_sand_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: string(STR_autoslope_coast);
        }
    }
}

// // OGFX GRID grass
spriteset (spriteset_ogfx_grid_grass_sand,  "gfx/ogfx_grid_ground.png") { template_groundtiles(2) }
spriteset (spriteset_ogfx_grid_grass_coast, "gfx/ogfx_grid_ground.png") { template_groundtiles(3) }

spritelayout layout_ogfx_grid_grass { ground { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_grass_coast { 
    ground   { sprite: 4061; } 
    building { sprite: spriteset_ogfx_grid_grass_coast(LOAD_TEMP(0)); always_draw: 1; } }
spritelayout layout_ogfx_grid_grass_menu { ground { sprite: spriteset_ogfx_grid_grass_sand(0); } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_grass_coast, [view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_grass;
    4: layout_ogfx_grid_grass_coast;  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_grass_sand, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_grass_sand);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              1;
        }
        graphics {
            default:         switch_ogfx_grid_grass_coast;
            purchase:        layout_ogfx_grid_grass_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: string(STR_autoslope_coast);
        }
    }
}

// // OGFX GRID snow - auto
spriteset (spriteset_ogfx_grid_autosnow, "gfx/ogfx_grid_snow.png") { template_autosnow_4(0) }
spriteset (spriteset_ogfx_grid_autosnow_coast, "gfx/ogfx_grid_snow.png") { template_autosnow_4(1) }

spritelayout layout_ogfx_grid_autosnow { 
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_ogfx_grid_autosnow(LOAD_TEMP(0) + LOAD_TEMP(1));
               hide_sprite: nearby_tile_height(0,0) < snowline_height-1; } }
spritelayout layout_ogfx_grid_autosnow_coast { 
    ground   { sprite: 4061; } 
    building { sprite: spriteset_ogfx_grid_coast(LOAD_TEMP(0));
               always_draw: 1; }
    building { sprite: spriteset_ogfx_grid_autosnow_coast(LOAD_TEMP(0) + LOAD_TEMP(1));
               hide_sprite: nearby_tile_height(0,0) < snowline_height-1; } }

spritelayout layout_ogfx_grid_autosnow_menu { 
    ground   { sprite: spriteset_ogfx_grid_sand(9); }
    building { sprite: spriteset_ogfx_grid_autosnow(9); }
    building { sprite: spriteset_text(5); } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_autosnow_view, [function_decide_sand_snowline(), view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_autosnow;
    4: layout_ogfx_grid_autosnow_coast; }

if (param_OGFX_objects_grid == 1 && climate == CLIMATE_ARCTIC) {
    item (FEAT_OBJECTS, ogfx_grid_autosnow, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_autosnow);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              1;
        }
        graphics {
            default:         switch_ogfx_grid_autosnow_view;
            purchase:        layout_ogfx_grid_autosnow_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: string(STR_autoslope_coast);
        }
    }
}

// // OGFX GRID snow
spriteset (spriteset_ogfx_grid_snow_1_4, "gfx/ogfx_grid_snow.png") { template_groundtiles(0) }
spriteset (spriteset_ogfx_grid_snow_2_4, "gfx/ogfx_grid_snow.png") { template_groundtiles(1) }
spriteset (spriteset_ogfx_grid_snow_3_4, "gfx/ogfx_grid_snow.png") { template_groundtiles(2) }
spriteset (spriteset_ogfx_grid_snow_4_4, "gfx/ogfx_grid_snow.png") { template_groundtiles(3) }
spriteset (spriteset_ogfx_grid_snow_1_4_coast, "gfx/ogfx_grid_snow.png") { template_groundtiles(4) }
spriteset (spriteset_ogfx_grid_snow_2_4_coast, "gfx/ogfx_grid_snow.png") { template_groundtiles(5) }
spriteset (spriteset_ogfx_grid_snow_3_4_coast, "gfx/ogfx_grid_snow.png") { template_groundtiles(6) }
spriteset (spriteset_ogfx_grid_snow_4_4_coast, "gfx/ogfx_grid_snow.png") { template_groundtiles(7) }

spritelayout layout_ogfx_grid_snow_1_4 { 
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_ogfx_grid_snow_1_4(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_snow_2_4 { 
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_ogfx_grid_snow_2_4(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_snow_3_4 { 
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_ogfx_grid_snow_3_4(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_snow_4_4 { 
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_ogfx_grid_snow_4_4(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_snow_1_4_coast { 
    ground   { sprite: 4061; } 
    building { sprite: spriteset_ogfx_grid_coast(LOAD_TEMP(0)); always_draw: 1; }
    building { sprite: spriteset_ogfx_grid_snow_1_4_coast(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_snow_2_4_coast { 
    ground   { sprite: 4061; } 
    building { sprite: spriteset_ogfx_grid_coast(LOAD_TEMP(0)); always_draw: 1; }
    building { sprite: spriteset_ogfx_grid_snow_2_4_coast(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_snow_3_4_coast { 
    ground   { sprite: 4061; } 
    building { sprite: spriteset_ogfx_grid_coast(LOAD_TEMP(0)); always_draw: 1; }
    building { sprite: spriteset_ogfx_grid_snow_3_4_coast(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_snow_4_4_coast { 
    ground   { sprite: 4061; } 
    building { sprite: spriteset_ogfx_grid_coast(LOAD_TEMP(0)); always_draw: 1; }
    building { sprite: spriteset_ogfx_grid_snow_4_4_coast(LOAD_TEMP(0)); } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_snow_view, [view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_snow_1_4;
    1: layout_ogfx_grid_snow_2_4;
    2: layout_ogfx_grid_snow_3_4;
    3: layout_ogfx_grid_snow_4_4;
    4: layout_ogfx_grid_snow_1_4_coast;
    5: layout_ogfx_grid_snow_2_4_coast;
    6: layout_ogfx_grid_snow_3_4_coast;
    7: layout_ogfx_grid_snow_4_4_coast;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_snow_menu, [STORE_TEMP(9, 0), view]) {
    0: layout_ogfx_grid_snow_1_4;
    1: layout_ogfx_grid_snow_2_4;
    2: layout_ogfx_grid_snow_3_4;
    3: layout_ogfx_grid_snow_4_4;  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_snow, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_snow);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_snow_view;
            purchase:        switch_ogfx_grid_snow_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: string(STR_autoslope_coast);
        }
    }
}

// // OGFX GRID rocks
spritelayout layout_ogfx_grid_rocks_A_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; } }
spritelayout layout_ogfx_grid_rocks_A_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; } }

spritelayout layout_ogfx_grid_rocks_A_autosnow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_autosnow(LOAD_TEMP(0) + LOAD_TEMP(1));
                  hide_sprite: nearby_tile_height(0,0) < snowline_height-1; }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0));
               hide_sprite: nearby_tile_height(0,0) < snowline_height; } }

spritelayout layout_ogfx_grid_rocks_A_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; } }

spritelayout layout_ogfx_grid_rocks_A_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_rocks_A_full_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_4_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }

spritelayout layout_ogfx_grid_rocks_A_autosnow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; } 
    building { sprite: spriteset_rocks_autosnow_menu(0); }
    building { sprite: spriteset_text(5); } }
spritelayout layout_ogfx_grid_rocks_A_snow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 0; } 
    building { sprite: spriteset_rocks_snow(0); }
    building { sprite: spriteset_text(4); } }

random_switch (FEAT_OBJECTS, SELF, random_ogfx_grid_rocks_A_snow) {
    1: layout_ogfx_grid_rocks_A_snow;
    1: layout_ogfx_grid_rocks_A_full_snow;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_A_view, [
    function_decide_sand_snowline(),
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_A_sand;
    1: layout_ogfx_grid_rocks_A_grass;
    2: layout_ogfx_grid_rocks_A_autosnow;
    3: random_ogfx_grid_rocks_A_snow;
    4: layout_ogfx_grid_rocks_A_ground;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_A_menu, [
    STORE_TEMP(0, 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_A_sand;
    1: layout_ogfx_grid_rocks_A_grass;
    2: layout_ogfx_grid_rocks_A_autosnow_menu;
    3: layout_ogfx_grid_rocks_A_snow_menu;
    4: layout_ogfx_grid_rocks_A_ground; }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_A_text, (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view) {
    0: string(STR_autoslope);
    1: string(STR_autoslope);
    2: string(STR_rock_autosnow);
    3: string(STR_no_autosnow);
    4: string(STR_autoslope);  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_rocks_A, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_rocks);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_rocks_A_view;
            purchase:        switch_ogfx_grid_rocks_A_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: switch_ogfx_grid_rocks_A_text;
        }
    }
}

spritelayout layout_ogfx_grid_rocks_B_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; } }
spritelayout layout_ogfx_grid_rocks_B_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; } }

spritelayout layout_ogfx_grid_rocks_B_autosnow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_autosnow(LOAD_TEMP(0) + LOAD_TEMP(1));
                  hide_sprite: nearby_tile_height(0,0) < snowline_height-1; }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0));
               hide_sprite: nearby_tile_height(0,0) < snowline_height; } }

spritelayout layout_ogfx_grid_rocks_B_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; } }

spritelayout layout_ogfx_grid_rocks_B_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_rocks_B_full_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_4_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }

spritelayout layout_ogfx_grid_rocks_B_autosnow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; } 
    building { sprite: spriteset_rocks_autosnow_menu(0); }
    building { sprite: spriteset_text(5); } }
spritelayout layout_ogfx_grid_rocks_B_snow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 1; } 
    building { sprite: spriteset_rocks_snow(0); }
    building { sprite: spriteset_text(4); } }

random_switch (FEAT_OBJECTS, SELF, random_ogfx_grid_rocks_B_snow) {
    1: layout_ogfx_grid_rocks_B_snow;
    1: layout_ogfx_grid_rocks_B_full_snow;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_B_view, [
    function_decide_sand_snowline(),
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_B_sand;
    1: layout_ogfx_grid_rocks_B_grass;
    2: layout_ogfx_grid_rocks_B_autosnow;
    3: random_ogfx_grid_rocks_B_snow;
    4: layout_ogfx_grid_rocks_B_ground;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_B_menu, [
    STORE_TEMP(0, 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_B_sand;
    1: layout_ogfx_grid_rocks_B_grass;
    2: layout_ogfx_grid_rocks_B_autosnow_menu;
    3: layout_ogfx_grid_rocks_B_snow_menu;
    4: layout_ogfx_grid_rocks_B_ground; }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_B_text, (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view) {
    0: string(STR_autoslope);
    1: string(STR_autoslope);
    2: string(STR_rock_autosnow);
    3: string(STR_no_autosnow);
    4: string(STR_autoslope);  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_rocks_B, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_rocks);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_rocks_B_view;
            purchase:        switch_ogfx_grid_rocks_B_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: switch_ogfx_grid_rocks_B_text;
        }
    }
}

spritelayout layout_ogfx_grid_rocks_C_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; } }
spritelayout layout_ogfx_grid_rocks_C_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; } }

spritelayout layout_ogfx_grid_rocks_C_autosnow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_autosnow(LOAD_TEMP(0) + LOAD_TEMP(1));
                  hide_sprite: nearby_tile_height(0,0) < snowline_height-1; }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0));
               hide_sprite: nearby_tile_height(0,0) < snowline_height; } }

spritelayout layout_ogfx_grid_rocks_C_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; } }

spritelayout layout_ogfx_grid_rocks_C_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_rocks_C_full_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_4_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }

spritelayout layout_ogfx_grid_rocks_C_autosnow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; } 
    building { sprite: spriteset_rocks_autosnow_menu(0); }
    building { sprite: spriteset_text(5); } }
spritelayout layout_ogfx_grid_rocks_C_snow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 2; } 
    building { sprite: spriteset_rocks_snow(0); }
    building { sprite: spriteset_text(4); } }

random_switch (FEAT_OBJECTS, SELF, random_ogfx_grid_rocks_C_snow) {
    1: layout_ogfx_grid_rocks_C_snow;
    1: layout_ogfx_grid_rocks_C_full_snow;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_C_view, [
    function_decide_sand_snowline(),
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_C_sand;
    1: layout_ogfx_grid_rocks_C_grass;
    2: layout_ogfx_grid_rocks_C_autosnow;
    3: random_ogfx_grid_rocks_C_snow;
    4: layout_ogfx_grid_rocks_C_ground;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_C_menu, [
    STORE_TEMP(0, 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_C_sand;
    1: layout_ogfx_grid_rocks_C_grass;
    2: layout_ogfx_grid_rocks_C_autosnow_menu;
    3: layout_ogfx_grid_rocks_C_snow_menu;
    4: layout_ogfx_grid_rocks_C_ground; }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_C_text, (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view) {
    0: string(STR_autoslope);
    1: string(STR_autoslope);
    2: string(STR_rock_autosnow);
    3: string(STR_no_autosnow);
    4: string(STR_autoslope);  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_rocks_C, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_rocks);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_rocks_C_view;
            purchase:        switch_ogfx_grid_rocks_C_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: switch_ogfx_grid_rocks_C_text;
        }
    }
}

spritelayout layout_ogfx_grid_rocks_D_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; } }
spritelayout layout_ogfx_grid_rocks_D_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; } }

spritelayout layout_ogfx_grid_rocks_D_autosnow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_autosnow(LOAD_TEMP(0) + LOAD_TEMP(1));
                  hide_sprite: nearby_tile_height(0,0) < snowline_height-1; }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0));
               hide_sprite: nearby_tile_height(0,0) < snowline_height; } }

spritelayout layout_ogfx_grid_rocks_D_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; } }

spritelayout layout_ogfx_grid_rocks_D_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_rocks_D_full_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_4_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }

spritelayout layout_ogfx_grid_rocks_D_autosnow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; } 
    building { sprite: spriteset_rocks_autosnow_menu(0); }
    building { sprite: spriteset_text(5); } }
spritelayout layout_ogfx_grid_rocks_D_snow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 3; } 
    building { sprite: spriteset_rocks_snow(0); }
    building { sprite: spriteset_text(4); } }

random_switch (FEAT_OBJECTS, SELF, random_ogfx_grid_rocks_D_snow) {
    1: layout_ogfx_grid_rocks_D_snow;
    1: layout_ogfx_grid_rocks_D_full_snow;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_D_view, [
    function_decide_sand_snowline(),
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_D_sand;
    1: layout_ogfx_grid_rocks_D_grass;
    2: layout_ogfx_grid_rocks_D_autosnow;
    3: random_ogfx_grid_rocks_D_snow;
    4: layout_ogfx_grid_rocks_D_ground;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_D_menu, [
    STORE_TEMP(0, 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_D_sand;
    1: layout_ogfx_grid_rocks_D_grass;
    2: layout_ogfx_grid_rocks_D_autosnow_menu;
    3: layout_ogfx_grid_rocks_D_snow_menu;
    4: layout_ogfx_grid_rocks_D_ground; }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_D_text, (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view) {
    0: string(STR_autoslope);
    1: string(STR_autoslope);
    2: string(STR_rock_autosnow);
    3: string(STR_no_autosnow);
    4: string(STR_autoslope);  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_rocks_D, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_rocks);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_rocks_D_view;
            purchase:        switch_ogfx_grid_rocks_D_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: switch_ogfx_grid_rocks_D_text;
        }
    }
}

spritelayout layout_ogfx_grid_rocks_E_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; } }
spritelayout layout_ogfx_grid_rocks_E_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; } }

spritelayout layout_ogfx_grid_rocks_E_autosnow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_autosnow(LOAD_TEMP(0) + LOAD_TEMP(1));
                  hide_sprite: nearby_tile_height(0,0) < snowline_height-1; }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0));
               hide_sprite: nearby_tile_height(0,0) < snowline_height; } }

spritelayout layout_ogfx_grid_rocks_E_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; } }

spritelayout layout_ogfx_grid_rocks_E_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_rocks_E_full_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_4_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }

spritelayout layout_ogfx_grid_rocks_E_autosnow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; } 
    building { sprite: spriteset_rocks_autosnow_menu(0); }
    building { sprite: spriteset_text(5); } }
spritelayout layout_ogfx_grid_rocks_E_snow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 4; } 
    building { sprite: spriteset_rocks_snow(0); }
    building { sprite: spriteset_text(4); } }

random_switch (FEAT_OBJECTS, SELF, random_ogfx_grid_rocks_E_snow) {
    1: layout_ogfx_grid_rocks_E_snow;
    1: layout_ogfx_grid_rocks_E_full_snow;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_E_view, [
    function_decide_sand_snowline(),
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_E_sand;
    1: layout_ogfx_grid_rocks_E_grass;
    2: layout_ogfx_grid_rocks_E_autosnow;
    3: random_ogfx_grid_rocks_E_snow;
    4: layout_ogfx_grid_rocks_E_ground;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_E_menu, [
    STORE_TEMP(0, 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_E_sand;
    1: layout_ogfx_grid_rocks_E_grass;
    2: layout_ogfx_grid_rocks_E_autosnow_menu;
    3: layout_ogfx_grid_rocks_E_snow_menu;
    4: layout_ogfx_grid_rocks_E_ground; }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_E_text, (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view) {
    0: string(STR_autoslope);
    1: string(STR_autoslope);
    2: string(STR_rock_autosnow);
    3: string(STR_no_autosnow);
    4: string(STR_autoslope);  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_rocks_E, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_rocks);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_rocks_E_view;
            purchase:        switch_ogfx_grid_rocks_E_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: switch_ogfx_grid_rocks_E_text;
        }
    }
}

spritelayout layout_ogfx_grid_rocks_F_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; } }
spritelayout layout_ogfx_grid_rocks_F_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; } }

spritelayout layout_ogfx_grid_rocks_F_autosnow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_autosnow(LOAD_TEMP(0) + LOAD_TEMP(1));
                  hide_sprite: nearby_tile_height(0,0) < snowline_height-1; }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0));
               hide_sprite: nearby_tile_height(0,0) < snowline_height; } }

spritelayout layout_ogfx_grid_rocks_F_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; } }

spritelayout layout_ogfx_grid_rocks_F_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }
spritelayout layout_ogfx_grid_rocks_F_full_snow {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    childsprite { sprite: spriteset_ogfx_grid_snow_4_4(LOAD_TEMP(0)); }
    building { sprite: spriteset_rocks(LOAD_TEMP(0));
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; }
    building { sprite: spriteset_rocks_snow(LOAD_TEMP(0)); } }

spritelayout layout_ogfx_grid_rocks_F_autosnow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; } 
    building { sprite: spriteset_rocks_autosnow_menu(0); }
    building { sprite: spriteset_text(5); } }
spritelayout layout_ogfx_grid_rocks_F_snow_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    childsprite { sprite: spriteset_ogfx_grid_snow_2_4(0); }
    building { sprite: spriteset_rocks(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: rocks_recolour_sprites + 5; } 
    building { sprite: spriteset_rocks_snow(0); }
    building { sprite: spriteset_text(4); } }

random_switch (FEAT_OBJECTS, SELF, random_ogfx_grid_rocks_F_snow) {
    1: layout_ogfx_grid_rocks_F_snow;
    1: layout_ogfx_grid_rocks_F_full_snow;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_F_view, [
    function_decide_sand_snowline(),
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_F_sand;
    1: layout_ogfx_grid_rocks_F_grass;
    2: layout_ogfx_grid_rocks_F_autosnow;
    3: random_ogfx_grid_rocks_F_snow;
    4: layout_ogfx_grid_rocks_F_ground;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_F_menu, [
    STORE_TEMP(0, 0),
    (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view
]) {
    0: layout_ogfx_grid_rocks_F_sand;
    1: layout_ogfx_grid_rocks_F_grass;
    2: layout_ogfx_grid_rocks_F_autosnow_menu;
    3: layout_ogfx_grid_rocks_F_snow_menu;
    4: layout_ogfx_grid_rocks_F_ground; }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_rocks_F_text, (view == 2 && climate != CLIMATE_ARCTIC) ? 4 : view) {
    0: string(STR_autoslope);
    1: string(STR_autoslope);
    2: string(STR_rock_autosnow);
    3: string(STR_no_autosnow);
    4: string(STR_autoslope);  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_rocks_F, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_rocks);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_rocks_F_view;
            purchase:        switch_ogfx_grid_rocks_F_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: switch_ogfx_grid_rocks_F_text;
        }
    }
}

// // OGFX GRID cacti
spritelayout layout_ogfx_grid_columnar_cacti_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_columnar_cacti0(LOAD_TEMP(0) + LOAD_TEMP(1)); } }
spritelayout layout_ogfx_grid_columnar_cacti_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_columnar_cacti1(LOAD_TEMP(0) + LOAD_TEMP(1)); } }
spritelayout layout_ogfx_grid_globular_cacti_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_globular_cacti0(LOAD_TEMP(0) + LOAD_TEMP(1)); } }
spritelayout layout_ogfx_grid_globular_cacti_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_globular_cacti1(LOAD_TEMP(0) + LOAD_TEMP(1)); } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_cacti_view, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(random_ground_32(), 1),
    view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_columnar_cacti_sand;
    1: layout_ogfx_grid_columnar_cacti_grass;
    2: layout_ogfx_grid_globular_cacti_sand;
    3: layout_ogfx_grid_globular_cacti_grass;
    4: layout_ogfx_grid_sand_coast;
    5: layout_ogfx_grid_grass_coast;
    6: layout_ogfx_grid_sand_coast;
    7: layout_ogfx_grid_grass_coast;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_cacti_menu, [STORE_TEMP(0, 0), STORE_TEMP(0, 1), view]) {
    0: layout_ogfx_grid_columnar_cacti_sand;
    1: layout_ogfx_grid_columnar_cacti_grass;
    2: layout_ogfx_grid_globular_cacti_sand;
    3: layout_ogfx_grid_globular_cacti_grass;  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_cacti, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_cacti);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_cacti_view;
            purchase:        switch_ogfx_grid_cacti_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: string(STR_autoslope_coast);
        }
    }
}

// // OGFX GRID palms
spritelayout layout_ogfx_grid_palms_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_palms0(LOAD_TEMP(0) + LOAD_TEMP(1)); zextent: 80; } }
spritelayout layout_ogfx_grid_palms_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_palms1(LOAD_TEMP(0) + LOAD_TEMP(1)); zextent: 80; } }
spritelayout layout_ogfx_grid_palms_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_palms2(LOAD_TEMP(0) + LOAD_TEMP(1)); zextent: 80; } }
spritelayout layout_ogfx_grid_palms_rough {
    ground   { sprite: 4000 + LOAD_TEMP(0); }
    building { sprite: spriteset_palms3(LOAD_TEMP(0) + LOAD_TEMP(1)); zextent: 80; } }
    
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_palms_view, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(random_ground_32(), 1),
    STORE_TEMP(function_slope_index_to_coast_index(), 2),
    view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_palms_sand;
    1: layout_ogfx_grid_palms_grass;
    2: layout_ogfx_grid_palms_ground;
    3: layout_ogfx_grid_palms_rough;
    4: layout_ogfx_grid_sand_coast;
    5: layout_ogfx_grid_grass_coast;
    6: layout_ground_coast;
    7: layout_ground_coast;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_palms_menu, [STORE_TEMP(0, 0), STORE_TEMP(0, 19), view]) {
    0: layout_ogfx_grid_palms_sand;
    1: layout_ogfx_grid_palms_grass;
    2: layout_ogfx_grid_palms_ground;
    3: layout_ogfx_grid_palms_rough;  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_palms, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_palms);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_palms_view;
            purchase:        switch_ogfx_grid_palms_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: string(STR_autoslope_coast);
        }
    }
}

// // OGFX GRID plants
spritelayout layout_ogfx_grid_plants_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_plants0(LOAD_TEMP(0) + LOAD_TEMP(1)); } }
spritelayout layout_ogfx_grid_plants_sand_coast {
    ground { sprite: 4061; }
    building { sprite: spriteset_ogfx_grid_coast(LOAD_TEMP(0)); always_draw: 1; } 
    building { sprite: spriteset_plants0(LOAD_TEMP(0) + LOAD_TEMP(1)); } }

spritelayout layout_ogfx_grid_plants_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_plants1(LOAD_TEMP(0) + LOAD_TEMP(1)); } }
spritelayout layout_ogfx_grid_plants_grass_coast {
    ground { sprite: 4061; }
    building { sprite: spriteset_ogfx_grid_grass_coast(LOAD_TEMP(0)); always_draw: 1; }
    building { sprite: spriteset_plants1(LOAD_TEMP(0) + LOAD_TEMP(1)); } }

spritelayout layout_ogfx_grid_plants_ground {
    ground   { sprite: GROUNDSPRITE_NORMAL + LOAD_TEMP(0); }
    building { sprite: spriteset_plants2(LOAD_TEMP(0) + LOAD_TEMP(1)); } }

spritelayout layout_ogfx_grid_plants_water {
    ground   { sprite: LOAD_TEMP(2); }
    building { sprite: spriteset_plants3(LOAD_TEMP(0) + LOAD_TEMP(1)); } }

spritelayout layout_ogfx_grid_plants_water_menu {
    ground   { sprite: 4061 + 4; }
    building { sprite: spriteset_plants3(179); } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_plants_view, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(random_ground_32(), 1),
    STORE_TEMP(function_slope_index_to_coast_index(), 2),
    view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_plants_sand;
    1: layout_ogfx_grid_plants_grass;
    2: layout_ogfx_grid_plants_ground;
    3: layout_ogfx_grid_plants_water;
    4: layout_ogfx_grid_plants_sand_coast;
    5: layout_ogfx_grid_plants_grass_coast;
    6: layout_ground_coast;
    7: layout_ogfx_grid_plants_water;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_plants_menu, [STORE_TEMP(0, 0), STORE_TEMP(0, 1), view]) {
    0: layout_ogfx_grid_plants_sand;
    1: layout_ogfx_grid_plants_grass;
    2: layout_ogfx_grid_plants_ground;
    3: layout_ogfx_grid_plants_water_menu;  }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_plants_text, view) {
    0: string(STR_autoslope_coast);
    1: string(STR_autoslope_coast);
    2: string(STR_autoslope);
    3: string(STR_autocoast);  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_plants, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_plants);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE, OBJ_FLAG_ON_WATER);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_plants_view;
            purchase:        switch_ogfx_grid_plants_menu;
            tile_check:      function_build_view_3_on_water;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: switch_ogfx_grid_plants_text;
        }
    }
}

// // OGFX GRID people
spritelayout layout_ogfx_grid_people_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_people0(LOAD_TEMP(0) + LOAD_TEMP(1)); } }
spritelayout layout_ogfx_grid_people_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_people1(LOAD_TEMP(0) + LOAD_TEMP(1)); } }
spritelayout layout_ogfx_grid_cars_sand {
    ground   { sprite: spriteset_ogfx_grid_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_cars0(LOAD_TEMP(0) + LOAD_TEMP(1));
               recolour_mode: RECOLOUR_REMAP;
               palette: LOAD_TEMP(2); } }
spritelayout layout_ogfx_grid_cars_grass {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(LOAD_TEMP(0)); }
    building { sprite: spriteset_cars1(LOAD_TEMP(0) + LOAD_TEMP(1));
               recolour_mode: RECOLOUR_REMAP;
               palette: LOAD_TEMP(2); } }

spritelayout layout_ogfx_grid_people_sand_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    building { sprite: spriteset_people0(0); } }
spritelayout layout_ogfx_grid_people_grass_menu {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(0); }
    building { sprite: spriteset_people1(38); } }
spritelayout layout_ogfx_grid_cars_sand_menu {
    ground   { sprite: spriteset_ogfx_grid_sand(0); }
    building { sprite: spriteset_cars0(0);
               recolour_mode: RECOLOUR_REMAP;
               palette: 781; } }
spritelayout layout_ogfx_grid_cars_grass_menu {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(0); }
    building { sprite: spriteset_cars1(1);
               recolour_mode: RECOLOUR_REMAP;
               palette: 778; } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_people_view, [
    STORE_TEMP(slope_to_sprite_offset(tile_slope), 0),
    STORE_TEMP(random_ground_32(), 1),
    STORE_TEMP(function_cc_recolour(0, 0), 2),
    view + function_decide_coast_add_4()]) {
    0: layout_ogfx_grid_people_sand;
    1: layout_ogfx_grid_people_grass;
    2: layout_ogfx_grid_cars_sand;
    3: layout_ogfx_grid_cars_grass;
    4: layout_ogfx_grid_sand_coast;
    5: layout_ogfx_grid_grass_coast;
    6: layout_ogfx_grid_sand_coast;
    7: layout_ogfx_grid_grass_coast;  }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_people_menu, view) {
    0: layout_ogfx_grid_people_sand_menu;
    1: layout_ogfx_grid_people_grass_menu;
    2: layout_ogfx_grid_cars_sand_menu;
    3: layout_ogfx_grid_cars_grass_menu;  }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_people, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_people);
            climates_available:     ALL_CLIMATES;
            size:                   [1,1];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_NO_FOUNDATIONS, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              4;
        }
        graphics {
            default:         switch_ogfx_grid_people_view;
            purchase:        switch_ogfx_grid_people_menu;
            tile_check:      return CB_RESULT_LOCATION_ALLOW;
            autoslope:       return CB_RESULT_AUTOSLOPE;
            additional_text: string(STR_autoslope);
        }
    }
}

// // OGFX GRID oasis
spritelayout layout_ogfx_grid_oasis_menu {
    ground   { sprite: spriteset_ogfx_oasis_ground_menu(0); }
    building { sprite: spriteset_oasis_menu(0); } }

spritelayout layout_ogfx_grid_oasis_T1 {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(0); }
    building { sprite: spriteset_oasis_T1(LOAD_TEMP(10) * LOAD_TEMP(11) - 1);
               zextent: 80;
               recolour_mode: RECOLOUR_REMAP;
               palette: LOAD_TEMP(2); } }
spritelayout layout_ogfx_grid_oasis_T2 {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(0); }
    building { sprite: spriteset_oasis_T2(LOAD_TEMP(20) * LOAD_TEMP(21) - 1);
               zextent: 80;
               recolour_mode: RECOLOUR_REMAP;
               palette: LOAD_TEMP(2); } }
spritelayout layout_ogfx_grid_oasis_T3 {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(0); }
    building { sprite: spriteset_oasis_T3(LOAD_TEMP(30) * LOAD_TEMP(31) - 1);
               zextent: 80;
               recolour_mode: RECOLOUR_REMAP;
               palette: LOAD_TEMP(2); } }
spritelayout layout_ogfx_grid_oasis_T4 {
    ground   { sprite: spriteset_ogfx_grid_grass_sand(0); } }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_oasis_T1, [
    STORE_TEMP(function_random_bits_from_tile_16_ranges(0, 0), 10),
    STORE_TEMP(function_random_bits_from_tile_32_ranges(0, 1), 11),
    STORE_TEMP(function_cc_recolour(0, 0), 2)])
    { layout_ogfx_grid_oasis_T1; }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_oasis_T2, [
    STORE_TEMP(function_random_bits_from_tile_16_ranges(0, -1), 20),
    STORE_TEMP(function_random_bits_from_tile_32_ranges(0,  0), 21),
    STORE_TEMP(function_cc_recolour(0, -1), 2)])
    { layout_ogfx_grid_oasis_T2; }
switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_oasis_T3, [
    STORE_TEMP(function_random_bits_from_tile_16_ranges(1, -1), 30),
    STORE_TEMP(function_random_bits_from_tile_32_ranges(1,  0), 31),
    STORE_TEMP(function_cc_recolour(1, -1), 2)])
    { layout_ogfx_grid_oasis_T3; }

switch (FEAT_OBJECTS, SELF, switch_ogfx_grid_oasis, relative_pos) {
    relative_coord(1, 0): switch_ogfx_grid_oasis_T1;
    relative_coord(1, 1): switch_ogfx_grid_oasis_T2;
    relative_coord(0, 1): switch_ogfx_grid_oasis_T3;
    relative_coord(0, 0): layout_ogfx_grid_oasis_T4; }

if (param_OGFX_objects_grid == 1) {
    item (FEAT_OBJECTS, ogfx_grid_oasis, EDIT_ID){
        property {
            class:                  "EDIT_CLASS";
            classname:              string(EDIT_STR_CLASSNAME);
            name:                   string(STR_oasis);
            climates_available:     ALL_CLIMATES;
            size:                   [2,2];
            build_cost_multiplier:  0;
            remove_cost_multiplier: 0;
            introduction_date:      0x00000000;
            end_of_life_date:       0xFFFFFFFF;
            object_flags:           bitmask(OBJ_FLAG_ANYTHING_REMOVE, OBJ_FLAG_ALLOW_BRIDGE);
            height:                 0;
            num_views:              1;
        }
        graphics {
            default:         switch_ogfx_grid_oasis;
            purchase:        layout_ogfx_grid_oasis_menu;
            additional_text: string(STR_autoslope);
        }
    }
}
